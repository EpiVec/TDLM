[{"path":[]},{"path":"https://epivec.github.io/TDLM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxime Lenormand. Author, maintainer.","code":""},{"path":"https://epivec.github.io/TDLM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lenormand M (2023). TDLM: Systematic comparison trip distribution laws models. R package version 0.1.0, https://epivec.github.io/TDLM/.","code":"@Manual{,   title = {TDLM: Systematic comparison of trip distribution laws and models},   author = {Maxime Lenormand},   year = {2023},   note = {R package version 0.1.0},   url = {https://epivec.github.io/TDLM/}, }"},{"path":[]},{"path":[]},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_1-install","dir":"","previous_headings":"","what":"1 Install","title":"Systematic comparison of trip distribution laws and models","text":"package TDLM can installed following command line R session:","code":"devtools::install_github(\"EpiVec/TDLM\")"},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_2-tutorial","dir":"","previous_headings":"","what":"2 Tutorial","title":"Systematic comparison of trip distribution laws and models","text":"tutorial vignette available .","code":""},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_3-dependencies","dir":"","previous_headings":"","what":"3 Dependencies","title":"Systematic comparison of trip distribution laws and models","text":"TDLM depends … .","code":""},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_4-citation","dir":"","previous_headings":"","what":"4 Citation","title":"Systematic comparison of trip distribution laws and models","text":"Lenormand M, Bassolas & Ramasco JJ (2016) Systematic comparison trip distribution laws models. Journal Transport Geography 51, 158-169.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check format of TDLM's inputs — check_format_names","title":"Check format of TDLM's inputs — check_format_names","text":"function checks TDLM's inputs required format.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check format of TDLM's inputs — check_format_names","text":"","code":"check_format_names(vectors, matrices, check = \"format_and_names\")"},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check format of TDLM's inputs — check_format_names","text":"vectors list vectors. list can contain one vector. recommended name element list. vectors = NULL matrices considered. matrices list matrices. list can contain one matrix. recommended name element list. matrices = NULL vectors considered. check character indicating types check (\"format\" \"format_and_names\") used (see Details).","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check format of TDLM's inputs — check_format_names","text":"message indicating check passed failed.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check format of TDLM's inputs — check_format_names","text":"TDLM's inputs based number locations sorted order. check = \"format\" run basic check ensure structure inputs (dimensions, class, type...) correct. recommended use location ID vector names, matrix rownames matrix colnames, set check  = \"format_and_names\" check names (check = \"format_and_names\" default). checks run successively run function many times needed get message indicating inputs passed check successfully.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check format of TDLM's inputs — check_format_names","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check format of TDLM's inputs — check_format_names","text":"","code":"data(mass) data(distance)"},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Great-circle distances between US counties — distance","title":"Great-circle distances between US counties — distance","text":"dataset containing great-circle distance (kilometers) 3,108 US counties.","code":""},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Great-circle distances between US counties — distance","text":"","code":"distance"},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Great-circle distances between US counties — distance","text":"matrix 3,108 rows 3,108 columns. element matrix represents distance two counties. County ID rownames colnames.","code":""},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Great-circle distances between US counties — distance","text":"https://www.sciencebase.gov/catalog/item/4f4e4a2ee4b07f02db615738","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of opportunities between pairs of locations — extract_opportunities","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"function computes number opportunities pairs locations defined (Lenormand et al. 2016) . given pair location number opportunities location origin location destination based number opportunities circle radius distance origin destination centered origin (excluding origin destination).","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"","code":"extract_opportunities(opportunity, distance, check_names = FALSE)"},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"opportunity numeric vector representing number opportunities per location. value positive. distance squared matrix representing distance locations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"squared matrix element represents number opportunities pair locations.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"opportunity distance based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"","code":"data(mass) data(distance) ind <- sample(dim(distance)[1], 100) opp <- mass[ind, 1] dist <- distance[ind, ind] sij <- extract_opportunities(   opportunity = opp,   distance = dist,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"function returns data.frame row provides one several goodness--fit measures simulated observed Origin-Destination matrix.","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"","code":"gof(   sim,   obs,   measures = \"all\",   distance,   use_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"sim object class TDLM (output run_law_model(), run_law() run_model()). matrix list matrix can also used (see Note). obs squared matrix representing observed mobility flows. measures vector string(s) indicating goodness--fit measure(s) chose (see Details). \"\" specified, measures calculated. distance squared matrix representing distance locations. necessary distance-based measures. use_proba boolean indicating proba matrix used instead simulated OD matrix compute measure(s). valid output run_law_model() argument write_proba = TRUE (see Note). check_names boolean indicating ID location used matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"data.frame providing one several goodness--fit measure(s) simulated OD(s) observed OD. row corresponds matrix sorted according list (list list) elements (names used provided).","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"\\(n\\) number locations, \\(T_{ij}\\) observed flow location \\(\\) location \\(j\\) (argument obs), \\(\\tilde{T}_{ij}\\) simulated flow location \\(\\) location \\(j\\) (matrix argument sim), \\(N=\\sum_{,j=1}^n T_{ij}\\) sum observed flows \\(\\tilde{N}=\\sum_{,j=1}^n \\tilde{T}_{ij}\\) sum simulated flows. described (Lenormand et al. 2016) , \\(\\displaystyle CPC(T,\\tilde{T}) = \\frac{2\\sum_{,j=1}^n min(T_{ij},\\tilde{T}_{ij})}{N + \\tilde{N}}\\) \\(\\displaystyle CPC(T,\\tilde{T}) = \\frac{2\\sum_{,j=1}^n min(T_{ij},\\tilde{T}_{ij})}{N + \\tilde{N}}\\)","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"default, sim output run_law_model() measure(s) computed simulated OD matrices proba matrix (included output write_proba = TRUE). argument use_proba can used compute measure(s) based proba matrix instead simulated OD matrix. case argument obs also proba matrix. inputs based number locations sorted order. recommended use location ID matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"","code":"data(mass) data(distance) ind <- sample(dim(distance)[1], 100)"},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":null,"dir":"Reference","previous_headings":"","what":"Population and number of out- and in-commuters by US county in 2000\n(data.frame) — mass","title":"Population and number of out- and in-commuters by US county in 2000\n(data.frame) — mass","text":"dataset containing number inhabitant, -commuters -commuters 3018 US counties 2000.","code":""},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population and number of out- and in-commuters by US county in 2000\n(data.frame) — mass","text":"","code":"mass"},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population and number of out- and in-commuters by US county in 2000\n(data.frame) — mass","text":"data.frame 3,108 rows 3 columns: rownames County ID. Population Number inhabitants). -commuters Number -commuters. -commuters Number -commuters.","code":""},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population and number of out- and in-commuters by US county in 2000\n(data.frame) — mass","text":"https://www2.census.gov/programs-surveys/decennial/tables/2000/county--county-worker-flow-files/","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":null,"dir":"Reference","previous_headings":"","what":"Origin-Destination commuting matrix between US counties in 2000 — od","title":"Origin-Destination commuting matrix between US counties in 2000 — od","text":"dataset containing number commuters 3,108 US counties.","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Origin-Destination commuting matrix between US counties in 2000 — od","text":"","code":"od"},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Origin-Destination commuting matrix between US counties in 2000 — od","text":"matrix 3,108 rows 3,108 columns. element matrix represents number commuters two counties. County ID rownames colnames.","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Origin-Destination commuting matrix between US counties in 2000 — od","text":"https://www2.census.gov/programs-surveys/decennial/tables/2000/county--county-worker-flow-files/","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based of different trip distribution laws and models — run_law","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"function estimates mobility flows using different distribution laws models. described (Lenormand et al. 2016) , function uses two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"","code":"run_law(   law = \"NGravExp\",   mass_origin,   mass_destination = mass_origin,   distance,   opportunity,   param,   model = \"DCM\",   nb_trips,   out_trips,   in_trips,   nbrep = 3,   write_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"law character indicating law use. mass_origin numeric vector representing mass origin (.e. demand). mass_destination numeric vector representing mass destination (.e. attractiveness). distance squared matrix representing distance locations (see Details). opportunity squared matrix representing number opportunities locations (see Details). param vector numeric value(s) used adjust importance distance opportunity associated chosen law. single value vector several parameter values can used (see Return). necessary original radiation law uniform law (see Details). model character indicating model use. nb_trips integer indicating total number trips. out_trips vector integers representing number outgoing trips per location. in_trips vector integers representing number incoming trips per location. nbrep integer indicating number replications associated model run. write_proba boolean indicating estimation probability move one location another obtained law returned along flows estimations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"object class TDLM. list list matrix containing parameter value nbrep simulated matrices end matrix probability (called proba) write_proba = TRUE. length(param) == 1 law == \"Rad\" law == \"Unif list matrix returned.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"First, compute matrix proba estimating probability \\(p_{ij}\\) observe trip location \\(\\) another location \\(j\\) (\\(\\sum_{}\\sum_{j} p_{ij}=1\\)). probability based demand \\(m_{}\\) (argument mass_origin) attractiveness \\(m_{j}\\) (argument mass_destination). Note population typically used surrogate quantities (mass_destination = mass_origin default). also depends distance \\(d_{ij}\\) locations (argument distance) number opportunities \\(s_{ij}\\) locations (argument opportunity) depending chosen law. effect distance number opportunities can adjusted parameter (argument param) except original radiation law uniform law. package consider eight probabilistic laws described details (Lenormand et al. 2016) . Gravity law exponential distance decay function (law = \"GravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law exponential distance decay function (law = \"NGravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Gravity law power distance decay function (law = \"GravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law power distance decay function (law = \"NGravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Schneider's intervening opportunities law (law = \"Schneider\"). arguments mass_origin, mass_destination (optional), opportunity param used. Radiation law (law = \"Rad\"). arguments mass_origin, mass_destination (optional) opportunity used. Extended radiation law (law = \"ExtRad\"). arguments mass_origin, mass_destination (optional), opportunity param used. Uniform law (law = \"Unif\"). argument mass_origin used extract number locations. Second, propose four constrained models generate flow distribution probability. models respect different level constraints. constraints can preserve total number trips (argument nb_trips) number -going trips \\(O_{}\\) (argument out_trips) /number -coming \\(D_{j}\\) (argument in_trips) according model. sum -going trips \\(\\sum_{} O_{}\\) equal sum -coming trips \\(\\sum_{j} D_{j}\\). Unconstrained model (model = \"UM\"). nb_trips preserved (arguments out_trips in_trips used). Production constrained model (model = \"PCM\"). out_trips preserved (arguments nb_trips in_trips used). Attraction constrained model (model = \"ACM\"). in_trips preserved (arguments nb_trips out_trips used). Doubly constrained model (model = \"DCM\"). out_trips in_trips preserved (arguments nb_tripswill used).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based of different trip distribution laws and models — run_law","text":"","code":"data(mass) data(distance) ind <- sample(dim(distance)[1], 100)"},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"function estimates mobility flows using different distribution laws models. described (Lenormand et al. 2016) , function uses two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"","code":"run_law_model(   law = \"NGravExp\",   mass_origin,   mass_destination = mass_origin,   distance,   opportunity,   param,   model = \"DCM\",   nb_trips,   out_trips,   in_trips,   nbrep = 3,   write_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"law character indicating law use. mass_origin numeric vector representing mass origin (.e. demand). mass_destination numeric vector representing mass destination (.e. attractiveness). distance squared matrix representing distance locations (see Details). opportunity squared matrix representing number opportunities locations (see Details). param vector numeric value(s) used adjust importance distance opportunity associated chosen law. single value vector several parameter values can used (see Return). necessary original radiation law uniform law (see Details). model character indicating model use. nb_trips integer indicating total number trips. out_trips vector integers representing number outgoing trips per location. in_trips vector integers representing number incoming trips per location. nbrep integer indicating number replications associated model run. write_proba boolean indicating estimation probability move one location another obtained law returned along flows estimations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"object class TDLM. list list matrix containing parameter value nbrep simulated matrices end matrix probability (called proba) write_proba = TRUE. length(param) == 1 law == \"Rad\" law == \"Unif list matrix returned.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"First, compute matrix proba estimating probability \\(p_{ij}\\) observe trip location \\(\\) another location \\(j\\) (\\(\\sum_{}\\sum_{j} p_{ij}=1\\)). probability based demand \\(m_{}\\) (argument mass_origin) attractiveness \\(m_{j}\\) (argument mass_destination). Note population typically used surrogate quantities (mass_destination = mass_origin default). also depends distance \\(d_{ij}\\) locations (argument distance) number opportunities \\(s_{ij}\\) locations (argument opportunity) depending chosen law. effect distance number opportunities can adjusted parameter (argument param) except original radiation law uniform law. package consider eight probabilistic laws described details (Lenormand et al. 2016) . Gravity law exponential distance decay function (law = \"GravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law exponential distance decay function (law = \"NGravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Gravity law power distance decay function (law = \"GravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law power distance decay function (law = \"NGravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Schneider's intervening opportunities law (law = \"Schneider\"). arguments mass_origin, mass_destination (optional), opportunity param used. Radiation law (law = \"Rad\"). arguments mass_origin, mass_destination (optional) opportunity used. Extended radiation law (law = \"ExtRad\"). arguments mass_origin, mass_destination (optional), opportunity param used. Uniform law (law = \"Unif\"). argument mass_origin used extract number locations. Second, propose four constrained models generate flow distribution probability. models respect different level constraints. constraints can preserve total number trips (argument nb_trips) number -going trips \\(O_{}\\) (argument out_trips) /number -coming \\(D_{j}\\) (argument in_trips) according model. sum -going trips \\(\\sum_{} O_{}\\) equal sum -coming trips \\(\\sum_{j} D_{j}\\). Unconstrained model (model = \"UM\"). nb_trips preserved (arguments out_trips in_trips used). Production constrained model (model = \"PCM\"). out_trips preserved (arguments nb_trips in_trips used). Attraction constrained model (model = \"ACM\"). in_trips preserved (arguments nb_trips out_trips used). Doubly constrained model (model = \"DCM\"). out_trips in_trips preserved (arguments nb_tripswill used).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based of different trip distribution laws and models — run_law_model","text":"","code":"data(mass) data(distance) ind <- sample(dim(distance)[1], 100)"},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based of different trip distribution laws and models — run_model","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"function estimates mobility flows using different distribution laws models. described (Lenormand et al. 2016) , function uses two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"","code":"run_model(   law = \"NGravExp\",   mass_origin,   mass_destination = mass_origin,   distance,   opportunity,   param,   model = \"DCM\",   nb_trips,   out_trips,   in_trips,   nbrep = 3,   write_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"law character indicating law use. mass_origin numeric vector representing mass origin (.e. demand). mass_destination numeric vector representing mass destination (.e. attractiveness). distance squared matrix representing distance locations (see Details). opportunity squared matrix representing number opportunities locations (see Details). param vector numeric value(s) used adjust importance distance opportunity associated chosen law. single value vector several parameter values can used (see Return). necessary original radiation law uniform law (see Details). model character indicating model use. nb_trips integer indicating total number trips. out_trips vector integers representing number outgoing trips per location. in_trips vector integers representing number incoming trips per location. nbrep integer indicating number replications associated model run. write_proba boolean indicating estimation probability move one location another obtained law returned along flows estimations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"object class TDLM. list list matrix containing parameter value nbrep simulated matrices end matrix probability (called proba) write_proba = TRUE. length(param) == 1 law == \"Rad\" law == \"Unif list matrix returned.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"First, compute matrix proba estimating probability \\(p_{ij}\\) observe trip location \\(\\) another location \\(j\\) (\\(\\sum_{}\\sum_{j} p_{ij}=1\\)). probability based demand \\(m_{}\\) (argument mass_origin) attractiveness \\(m_{j}\\) (argument mass_destination). Note population typically used surrogate quantities (mass_destination = mass_origin default). also depends distance \\(d_{ij}\\) locations (argument distance) number opportunities \\(s_{ij}\\) locations (argument opportunity) depending chosen law. effect distance number opportunities can adjusted parameter (argument param) except original radiation law uniform law. package consider eight probabilistic laws described details (Lenormand et al. 2016) . Gravity law exponential distance decay function (law = \"GravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law exponential distance decay function (law = \"NGravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Gravity law power distance decay function (law = \"GravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law power distance decay function (law = \"NGravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Schneider's intervening opportunities law (law = \"Schneider\"). arguments mass_origin, mass_destination (optional), opportunity param used. Radiation law (law = \"Rad\"). arguments mass_origin, mass_destination (optional) opportunity used. Extended radiation law (law = \"ExtRad\"). arguments mass_origin, mass_destination (optional), opportunity param used. Uniform law (law = \"Unif\"). argument mass_origin used extract number locations. Second, propose four constrained models generate flow distribution probability. models respect different level constraints. constraints can preserve total number trips (argument nb_trips) number -going trips \\(O_{}\\) (argument out_trips) /number -coming \\(D_{j}\\) (argument in_trips) according model. sum -going trips \\(\\sum_{} O_{}\\) equal sum -coming trips \\(\\sum_{j} D_{j}\\). Unconstrained model (model = \"UM\"). nb_trips preserved (arguments out_trips in_trips used). Production constrained model (model = \"PCM\"). out_trips preserved (arguments nb_trips in_trips used). Attraction constrained model (model = \"ACM\"). in_trips preserved (arguments nb_trips out_trips used). Doubly constrained model (model = \"DCM\"). out_trips in_trips preserved (arguments nb_tripswill used).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based of different trip distribution laws and models — run_model","text":"","code":"data(mass) data(distance) ind <- sample(dim(distance)[1], 100)"},{"path":"https://epivec.github.io/TDLM/reference/spcounty.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial distribution of US counties in 2000 — spcounty","title":"Spatial distribution of US counties in 2000 — spcounty","text":"dataset containing geometry 3,108 US counties.","code":""},{"path":"https://epivec.github.io/TDLM/reference/spcounty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial distribution of US counties in 2000 — spcounty","text":"","code":"spcounty"},{"path":"https://epivec.github.io/TDLM/reference/spcounty.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial distribution of US counties in 2000 — spcounty","text":"ID County ID. Longitude Longitude coordinate centroid county. Latitude Latitude coordinate centroid county. Area Surface area county (square kilometer). geometry Geometry county.","code":""},{"path":"https://epivec.github.io/TDLM/reference/spcounty.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial distribution of US counties in 2000 — spcounty","text":"https://www.sciencebase.gov/catalog/item/4f4e4a2ee4b07f02db615738","code":""}]
