[{"path":[]},{"path":"https://epivec.github.io/TDLM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxime Lenormand. Author, maintainer.","code":""},{"path":"https://epivec.github.io/TDLM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lenormand M (2023). TDLM: Systematic comparison trip distribution laws models. R package version 0.1.0, https://epivec.github.io/TDLM/.","code":"@Manual{,   title = {TDLM: Systematic comparison of trip distribution laws and models},   author = {Maxime Lenormand},   year = {2023},   note = {R package version 0.1.0},   url = {https://epivec.github.io/TDLM/}, }"},{"path":[]},{"path":[]},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_1-install","dir":"","previous_headings":"","what":"1 Install","title":"Systematic comparison of trip distribution laws and models","text":"package TDLM can installed following command line R session:","code":"# install.packages(\"devtools\") devtools::install_github(\"EpiVec/TDLM\")"},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_2-tutorial","dir":"","previous_headings":"","what":"2 Tutorial","title":"Systematic comparison of trip distribution laws and models","text":"tutorial vignette available .","code":""},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_3-dependencies","dir":"","previous_headings":"","what":"3 Dependencies","title":"Systematic comparison of trip distribution laws and models","text":"TDLM depends Ecume, mathjaxr. Rdpack. readr. rmarkdown sf.","code":""},{"path":"https://epivec.github.io/TDLM/index.html","id":"id_4-citation","dir":"","previous_headings":"","what":"4 Citation","title":"Systematic comparison of trip distribution laws and models","text":"Lenormand M, Bassolas & Ramasco JJ (2016) Systematic comparison trip distribution laws models. Journal Transport Geography 51, 158-169.","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatic calibration of trip distribution parameters — calib_param","title":"Automatic calibration of trip distribution parameters — calib_param","text":"function returns estimation optimal parameter value based average surface area locations (square kilometer) according law. estimation tested commuting data (kilometer).","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatic calibration of trip distribution parameters — calib_param","text":"","code":"calib_param(av_surf, law = \"NGravExp\")"},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatic calibration of trip distribution parameters — calib_param","text":"av_surf positive numeric value indicating average surface area locations (square kilometer). law character indicating law use (see Details).","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatic calibration of trip distribution parameters — calib_param","text":"estimation optimal parameter value based average surface area locations.","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatic calibration of trip distribution parameters — calib_param","text":"estimation based Figure 8 Lenormand et al. (2016)  four types laws. normalized gravity law exponential distance decay function (law = \"NGravExp\"), normalized gravity law power distance decay function (law = \"NGravPow\"), Schneider's intervening opportunities law (law = \"Schneider\") extended radiation law (law = \"RadExt\").","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Automatic calibration of trip distribution parameters — calib_param","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Automatic calibration of trip distribution parameters — calib_param","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/calib_param.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatic calibration of trip distribution parameters — calib_param","text":"","code":"data(county)  res <- extract_spatial_information(county, id = \"ID\") av_surf <- mean(res$surface)  calib_param(av_surf = av_surf, law = \"NGravExp\") #> [1] 0.08521097 calib_param(av_surf = av_surf, law = \"NGravPow\") #> [1] 3.295941 calib_param(av_surf = av_surf, law = \"Schneider\") #> [1] 2.475339e-06 calib_param(av_surf = av_surf, law = \"RadExt\") #> [1] 1.299361"},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check format of TDLM's inputs — check_format_names","title":"Check format of TDLM's inputs — check_format_names","text":"function checks TDLM's inputs required format (names).","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check format of TDLM's inputs — check_format_names","text":"","code":"check_format_names(vectors, matrices = NULL, check = \"format_and_names\")"},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check format of TDLM's inputs — check_format_names","text":"vectors list vectors. list can contain one vector. recommended name element list. vectors = NULL matrices considered. matrices list matrices. list can contain one matrix. recommended name element list. matrices = NULL vectors considered (default). check character indicating types check (\"format\" \"format_and_names\") used (see Details).","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check format of TDLM's inputs — check_format_names","text":"message indicating check passed failed.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check format of TDLM's inputs — check_format_names","text":"TDLM's inputs based number locations sorted order. check = \"format\" run basic checks ensure structure inputs (dimensions, class, type...) correct. recommended use location ID vector names, matrix rownames matrix colnames. Set check  = \"format_and_names\" check inputs' names. checks run successively, run function many times needed get message indicating inputs passed check successfully.","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check format of TDLM's inputs — check_format_names","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/check_format_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check format of TDLM's inputs — check_format_names","text":"","code":"data(mass) data(distance)  mi <- as.numeric(mass[, 1]) names(mi) <- rownames(mass) mj <- mi  check_format_names(   vectors = list(mi = mi, mj = mj),   matrices = list(distance = distance),   check = \"format_and_names\" ) #> The inputs passed the format_and_names checks successfully!"},{"path":"https://epivec.github.io/TDLM/reference/county.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial distribution of US Kansas counties in 2000 — county","title":"Spatial distribution of US Kansas counties in 2000 — county","text":"dataset containing geometry 105 US Kansas counties.","code":""},{"path":"https://epivec.github.io/TDLM/reference/county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial distribution of US Kansas counties in 2000 — county","text":"","code":"county"},{"path":"https://epivec.github.io/TDLM/reference/county.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial distribution of US Kansas counties in 2000 — county","text":"ID County ID. Longitude Longitude coordinate centroid county. Latitude Latitude coordinate centroid county. Area Surface area county (square kilometer). geometry Geometry county.","code":""},{"path":"https://epivec.github.io/TDLM/reference/county.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial distribution of US Kansas counties in 2000 — county","text":"https://www.sciencebase.gov/catalog/item/4f4e4a2ee4b07f02db615738","code":""},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Great-circle distances between US Kansas counties — distance","title":"Great-circle distances between US Kansas counties — distance","text":"dataset containing great-circle distance (kilometers) 105 US Kansas counties.","code":""},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Great-circle distances between US Kansas counties — distance","text":"","code":"distance"},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Great-circle distances between US Kansas counties — distance","text":"matrix 105 rows 105 columns. element matrix represents distance two counties. County ID rownames colnames.","code":""},{"path":"https://epivec.github.io/TDLM/reference/distance.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Great-circle distances between US Kansas counties — distance","text":"https://www.sciencebase.gov/catalog/item/4f4e4a2ee4b07f02db615738","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the number of opportunities between pairs of locations — extract_opportunities","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"function computes number opportunities pairs locations defined (Lenormand et al. 2016) . given pair location number opportunities location origin location destination based number opportunities circle radius equal distance origin destination centered origin. number opportunities origin destination included.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"","code":"extract_opportunities(opportunity, distance, check_names = FALSE)"},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"opportunity numeric vector representing number opportunities per location. value positive. distance squared matrix representing distance locations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"squared matrix element represents number opportunities pair locations.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"opportunity distance based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_opportunities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the number of opportunities between pairs of locations — extract_opportunities","text":"","code":"data(mass) data(distance)  opportunity <- mass[, 1]  sij <- extract_opportunities(   opportunity = opportunity,   distance = distance,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distances and surface areas from a spatial object — extract_spatial_information","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"function returns matrix distances locations (kilometer) along vector surface areas locations (square kilometer).","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"","code":"extract_spatial_information(geometry, id = NULL, show_progress = FALSE)"},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"geometry spatial object can handled sf package. id name number column use rownames colnames output distance matrix (optional, NULL default). vector length equal number locations can also used. show_progress boolean indicating progress bar displayed.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"list composed two elements. first element squared matrix representing great-circle distance (kilometer) locations. second element vector containing surface area location (squared kilometer).","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"geometry must projected valid coordinate reference system. reprojected degrees longitude/latitude compute great-circle distances centroids' locations internal function compute surface area function st_area sf package.","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"outputs based locations contained geometry sorted order. optional id can also provided used names outputs.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/extract_spatial_information.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract distances and surface areas from a spatial object — extract_spatial_information","text":"","code":"data(county)  res <- extract_spatial_information(county, id = \"ID\")  dim(res$distance) #> [1] 105 105  length(res$surface) #> [1] 105"},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"function returns data.frame row provides one several goodness--fit measures simulated observed Origin-Destination matrix.","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"","code":"gof(   sim,   obs,   measures = \"all\",   distance = NULL,   bin_size = 2,   use_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"sim object class TDLM (output run_law_model(), run_law() run_model()). matrix list matrices can also used (see Note). obs squared matrix representing observed mobility flows. measures vector string(s) indicating goodness--fit measure(s) chose (see Details). \"\" specified, measures calculated. distance squared matrix representing distance locations. necessary distance-based measures. bin_size numeric value indicating size bin used discretize distance distribution compute CPC_d (2 \"km\" default). use_proba boolean indicating proba matrix used instead simulated OD matrix compute measure(s). valid output run_law_model() argument write_proba = TRUE (see Note). check_names boolean indicating ID location used matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"data.frame providing one several goodness--fit measure(s) simulated OD(s) observed OD. row corresponds matrix sorted according list (list list) elements (names used provided).","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"\\(n\\) number locations, \\(T_{ij}\\) observed flow location \\(\\) location \\(j\\) (argument obs), \\(\\tilde{T}_{ij}\\) simulated flow location \\(\\) location \\(j\\) (matrix argument sim), \\(N=\\sum_{,j=1}^n T_{ij}\\) sum observed flows \\(\\tilde{N}=\\sum_{,j=1}^n \\tilde{T}_{ij}\\) sum simulated flows. Several goodness--fit measures considered measures = c(\"CPC\", \"NRMSE\", \"KL\", \"CPL\", \"CPC_d\", \"KS\"). Common Part Commuters (Gargiulo et al. 2012; Lenormand et al. 2012; Lenormand et al. 2016) , \\(\\displaystyle CPC(T,\\tilde{T}) = \\frac{2\\cdot\\sum_{,j=1}^n min(T_{ij},\\tilde{T}_{ij})}{N + \\tilde{N}}\\) Normalized Root Mean Square Error (NRMSE), \\(\\displaystyle NRMSE(T,\\tilde{T}) = \\sqrt{\\frac{\\sum_{,j=1}^n (T_{ij}-\\tilde{T}_{ij})^2}{N}}\\) Kullback–Leibler divergence (Kullback Leibler 1951) , \\(\\displaystyle KL(T,\\tilde{T}) = \\sum_{,j=1}^n \\frac{T_{ij}}{N}\\log\\left(\\frac{T_{ij}}{N}\\frac{\\tilde{N}}{\\tilde{T}_{ij}}\\right)\\) Common Part Links (CPL) (Lenormand et al. 2016) , \\(\\displaystyle CPL(T,\\tilde{T}) = \\frac{2\\cdot\\sum_{,j=1}^n 1_{T_{ij}>0} \\cdot 1_{\\tilde{T}_{ij}>0}}{\\sum_{,j=1}^n 1_{T_{ij}>0} + \\sum_{,j=1}^n 1_{\\tilde{T}_{ij}>0}}\\) Common Part Commuters based disance (Lenormand et al. 2016) , noted CPC_d. Let us consider \\(N_k\\) (\\(\\tilde{N}_k\\)) sum observed (simulated) flows distance comprised bin [bin_size*k-bin_size, bin_size*k[. \\(\\displaystyle CPC_d(T,\\tilde{T}) = \\frac{2\\cdot\\sum_{k=1}^{\\infty} min(N_{k},\\tilde{N}_{k})}{N+\\tilde{N}}\\) Kolmogorv-Smirnov statistic p-value (Massey 1951)  , noted KS. based observed simulated flow distance distribution computed ks_test function Ecume package.","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"default, sim output run_law_model() measure(s) computed simulated OD matrices proba matrix (included output write_proba = TRUE). argument use_proba can used compute measure(s) based proba matrix instead simulated OD matrix. case argument obs also proba matrix. inputs based number locations sorted order. recommended use location ID matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169. Gargiulo F, Lenormand M, Huet S, Baqueiro Espinosa O (2012). “Commuting network model: getting essentials.” Journal Artificial Societies Social Simulation, 15(2), 13. Lenormand M, Huet S, Gargiulo F, Deffuant G (2012). “Universal Model Commuting Networks.” PLoS ONE, 7, e45985. Kullback S, Leibler RA (1951). “Information Sufficiency.” Annals Mathematical Statistics, 22(1), 79 -- 86. Massey FJ (1951). “Kolmogorov-Smirnov test goodness fit.” Journal American Statistical Association, 46(253), 68--78.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/gof.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute goodness-of-fit measures between observed and simulated OD matrices — gof","text":"","code":"data(mass) data(distance) data(od)  mi <- as.numeric(mass[, 1]) mj <- mi Oi <- as.numeric(mass[, 2]) Dj <- as.numeric(mass[, 3])  res <- run_law_model(   law = \"GravExp\", mass_origin = mi, mass_destination = mj,   distance = distance, opportunity = NULL, param = c(0.01, 0.02, 0.03),   model = \"DCM\", nb_trips = NULL, out_trips = Oi, in_trips = Dj,   average = FALSE, nbrep = 3, maxiter = 50, mindiff = 0.01,   write_proba = FALSE,   check_names = FALSE )  gof(   sim = res, obs = od, measures = \"all\", distance = distance, bin_size = 2,   use_proba = FALSE,   check_names = FALSE ) #>     Parameter    Simulation       CPC    NRMSE        KL       CPL     CPC_d #> 1 parameter_1 replication_1 0.4571868 38.95168 0.9398637 0.4254870 0.5139832 #> 2 parameter_1 replication_2 0.4574264 38.90962 0.9389325 0.4260870 0.5143726 #> 3 parameter_2 replication_1 0.6150579 26.31478 0.5031439 0.5237877 0.6686299 #> 4 parameter_2 replication_2 0.6154222 26.28466 0.5030046 0.5243343 0.6687148 #> 5 parameter_3 replication_1 0.7110064 18.75561 0.2974621 0.5963787 0.7723400 #> 6 parameter_3 replication_2 0.7112110 18.69527 0.2972523 0.5952875 0.7726944 #>     KS_stat        KS_pval #> 1 0.4832997 0.000001499702 #> 2 0.4828505 0.000001549149 #> 3 0.3228481 0.008772295695 #> 4 0.3228930 0.008776611056 #> 5 0.2106378 0.243377496012 #> 6 0.2102884 0.245665370338"},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":null,"dir":"Reference","previous_headings":"","what":"Population and number of out- and in-commuters by US Kansas county in 2000 — mass","title":"Population and number of out- and in-commuters by US Kansas county in 2000 — mass","text":"dataset containing number inhabitants, -commuters -commuters 105 US Kansas counties 2000.","code":""},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population and number of out- and in-commuters by US Kansas county in 2000 — mass","text":"","code":"mass"},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population and number of out- and in-commuters by US Kansas county in 2000 — mass","text":"data.frame 105 rows 3 columns: rownames County ID. Population Number inhabitants. -commuters Number -commuters. -commuters Number -commuters.","code":""},{"path":"https://epivec.github.io/TDLM/reference/mass.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population and number of out- and in-commuters by US Kansas county in 2000 — mass","text":"https://www2.census.gov/programs-surveys/decennial/tables/2000/county--county-worker-flow-files/","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":null,"dir":"Reference","previous_headings":"","what":"Origin-Destination commuting matrix between US Kansas counties in 2000 — od","title":"Origin-Destination commuting matrix between US Kansas counties in 2000 — od","text":"dataset containing number commuters 105 US Kansas counties 2000.","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Origin-Destination commuting matrix between US Kansas counties in 2000 — od","text":"","code":"od"},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Origin-Destination commuting matrix between US Kansas counties in 2000 — od","text":"matrix 105 rows 105 columns. element matrix represents number commuters two counties. County ID rownames colnames.","code":""},{"path":"https://epivec.github.io/TDLM/reference/od.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Origin-Destination commuting matrix between US Kansas counties in 2000 — od","text":"https://www2.census.gov/programs-surveys/decennial/tables/2000/county--county-worker-flow-files/","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based on different trip distribution laws — run_law","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"function estimates mobility flows using different distribution laws. described (Lenormand et al. 2016) , propose two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law. function uses first step generate probability distribution based different laws.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"","code":"run_law(   law = \"Unif\",   mass_origin,   mass_destination = mass_origin,   distance = NULL,   opportunity = NULL,   param = NULL,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"law character indicating law use (see Details). mass_origin numeric vector representing mass origin (.e. demand). mass_destination numeric vector representing mass destination (.e. attractiveness). distance squared matrix representing distance locations (see Details). opportunity squared matrix representing number opportunities locations (see Details). Can easily computed extract_opportunities(). param vector numeric value(s) used adjust importance distance opportunity associated chosen law. single value vector several parameter values can used (see Return). necessary original radiation law uniform law (see Details). check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"object class TDLM. list list matrices containing parameter value matrix probabilities (called proba). length(param) == 1 law == \"Rad\" law == \"Unif list matrices returned.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"compute matrix proba estimating probability \\(p_{ij}\\) observe trip location \\(\\) another location \\(j\\) (\\(\\sum_{}\\sum_{j} p_{ij}=1\\)). probability based demand \\(m_{}\\) (argument mass_origin) attractiveness \\(m_{j}\\) (argument mass_destination). Note population typically used surrogate quantities (mass_destination = mass_origin default). also depends distance \\(d_{ij}\\) locations (argument distance) number opportunities \\(s_{ij}\\) locations (argument opportunity) depending chosen law. effect distance number opportunities can adjusted parameter (argument param) except original radiation law uniform law. package consider eight probabilistic laws described details Lenormand et al. (2016) . Four gravity laws (Carey 1858; Zipf 1946; Barthelemy 2011; Lenormand et al. 2016) , three intervening opportunity laws (Schneider 1959; Simini et al. 2012; Yang et al. 2014)  uniform law. Gravity law exponential distance decay function (law = \"GravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law exponential distance decay function (law = \"NGravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Gravity law power distance decay function (law = \"GravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law power distance decay function (law = \"NGravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Schneider's intervening opportunities law (law = \"Schneider\"). arguments mass_origin, mass_destination (optional), opportunity param used. Radiation law (law = \"Rad\"). arguments mass_origin, mass_destination (optional) opportunity used. Extended radiation law (law = \"RadExt\"). arguments mass_origin, mass_destination (optional), opportunity param used. Uniform law (law = \"Unif\"). argument mass_origin used extract number locations.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169. Carey HC (1858). Principles Social Science. Lippincott. Zipf GK (1946). “P1 P2/D Hypothesis: Intercity Movement Persons.” American Sociological Review, 11(6), 677--686. Barthelemy M (2011). “Spatial Networks.” Physics Reports, 499, 1-101. Schneider M (1959). “Gravity models trip distribution theory.” Papers regional science association, 5, 51-58. Simini F, González MC, Maritan , Barabasi (2012). “universal model mobility migration patterns.” Nature, 484, 96-100. Yang Y, Herrera C, Eagle N, González MC (2014). “Limits Predictability Commuting Flows Absence Data Calibration.” Scientific Reports, 4(5662), 5662.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based on different trip distribution laws — run_law","text":"","code":"data(mass) data(distance)  mi <- as.numeric(mass[, 1]) mj <- mi  res <- run_law(   law = \"GravExp\", mass_origin = mi, mass_destination = mj,   distance = distance, opportunity = NULL, param = 0.01,   check_names = FALSE )  # print(res)"},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"function estimates mobility flows using different distribution laws models. described Lenormand et al. (2016) , function uses two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"","code":"run_law_model(   law = \"Unif\",   mass_origin,   mass_destination = mass_origin,   distance = NULL,   opportunity = NULL,   param = NULL,   model = \"UM\",   nb_trips = 1000,   out_trips = NULL,   in_trips = out_trips,   average = FALSE,   nbrep = 3,   maxiter = 50,   mindiff = 0.01,   write_proba = FALSE,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"law character indicating law use (see Details). mass_origin numeric vector representing mass origin (.e. demand). mass_destination numeric vector representing mass destination (.e. attractiveness). distance squared matrix representing distance locations (see Details). opportunity squared matrix representing number opportunities locations (see Details). Can easily computed extract_opportunities(). param vector numeric value(s) used adjust importance distance opportunity associated chosen law. single value vector several parameter values can used (see Return). necessary original radiation law uniform law (see Details). model character indicating model use. nb_trips numeric value indicating total number trips. Must integer average = FALSE (see Details). out_trips numeric vector representing number outgoing trips per location. Must vector integers average = FALSE (see Details). in_trips numeric vector representing number incoming trips per location. Must vector integers average = FALSE (see Details). average boolean indicating average mobility flow matrix generated instead nbrep matrices based random draws (see Details). nbrep integer indicating number replications associated model run. Note nbrep = 1 average = TRUE (see Details). maxiter integer indicating maximal number iterations adjusting Doubly Constrained Model (see Details). mindiff numeric strictly positive value indicating stopping criterion adjusting Doubly Constrained Model (see Details). write_proba boolean indicating estimation probability move one location another obtained distribution law returned along flows estimations. check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"object class TDLM. list list matrices containing parameter value nbrep simulated matrices matrix probabilities (called proba) write_proba = TRUE. length(param) == 1 law == \"Rad\" law == \"Unif list matrices returned.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"First, compute matrix proba estimating probability \\(p_{ij}\\) observe trip location \\(\\) another location \\(j\\) (\\(\\sum_{}\\sum_{j} p_{ij}=1\\)). probability based demand \\(m_{}\\) (argument mass_origin) attractiveness \\(m_{j}\\) (argument mass_destination). Note population typically used surrogate quantities (mass_destination = mass_origin default). also depends distance \\(d_{ij}\\) locations (argument distance) number opportunities \\(s_{ij}\\) locations (argument opportunity) depending chosen law. effect distance number opportunities can adjusted parameter (argument param) except original radiation law uniform law. package consider eight probabilistic laws described details Lenormand et al. (2016) . Four gravity laws (Carey 1858; Zipf 1946; Barthelemy 2011; Lenormand et al. 2016) , three intervening opportunity laws (Schneider 1959; Simini et al. 2012; Yang et al. 2014)  uniform law. Gravity law exponential distance decay function (law = \"GravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law exponential distance decay function (law = \"NGravExp\"). arguments mass_origin, mass_destination (optional), distance param used. Gravity law power distance decay function (law = \"GravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Normalized gravity law power distance decay function (law = \"NGravPow\"). arguments mass_origin, mass_destination (optional), distance param used. Schneider's intervening opportunities law (law = \"Schneider\"). arguments mass_origin, mass_destination (optional), opportunity param used. Radiation law (law = \"Rad\"). arguments mass_origin, mass_destination (optional) opportunity used. Extended radiation law (law = \"RadExt\"). arguments mass_origin, mass_destination (optional), opportunity param used. Uniform law (law = \"Unif\"). argument mass_origin used extract number locations. Second, propose four constrained models generate flows distribution probability. models respect different level constraints. constraints can preserve total number trips (argument nb_trips) number -going trips \\(O_{}\\) (argument out_trips) /number -coming \\(D_{j}\\) (argument in_trips) according model. sum -going trips \\(\\sum_{} O_{}\\) equal sum -coming trips \\(\\sum_{j} D_{j}\\). Unconstrained model (model = \"UM\"). nb_trips preserved (arguments out_trips in_trips used). Production constrained model (model = \"PCM\"). out_trips preserved (arguments nb_trips in_trips used). Attraction constrained model (model = \"ACM\"). in_trips preserved (arguments nb_trips out_trips used). Doubly constrained model (model = \"DCM\"). out_trips in_trips preserved (arguments nb_tripswill used). doubly constrained model based Iterative Proportional Fitting process (Deming Stephan 1940) . arguments maxiter (50 default) mindiff (0.01 default) can used tune model. mindiff minimal tolerated relative error simulated observed marginals. maxiter ensures algorithm stops even converged toward mindiff wanted value. default, average = FALSE, nbrep matrices generated proba multinomial random draws take different forms according model used. case, models deal positive integers inputs outputs. Nevertheless, also possible generate average matrix based multinomial distribution (based infinite number drawings. case, models' inputs can either positive integer real numbers output (nbrep = 1 case) matrix positive real numbers.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169. Carey HC (1858). Principles Social Science. Lippincott. Zipf GK (1946). “P1 P2/D Hypothesis: Intercity Movement Persons.” American Sociological Review, 11(6), 677--686. Barthelemy M (2011). “Spatial Networks.” Physics Reports, 499, 1-101. Schneider M (1959). “Gravity models trip distribution theory.” Papers regional science association, 5, 51-58. Simini F, González MC, Maritan , Barabasi (2012). “universal model mobility migration patterns.” Nature, 484, 96-100. Yang Y, Herrera C, Eagle N, González MC (2014). “Limits Predictability Commuting Flows Absence Data Calibration.” Scientific Reports, 4(5662), 5662. Deming , Stephan FF (1940). “Least Squares Adjustment Sample Frequency Table Expected Marginal Totals Known.” Annals Mathematical Statistics, 11, 427-444.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_law_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based on different trip distribution laws and models — run_law_model","text":"","code":"data(mass) data(distance)  mi <- as.numeric(mass[, 1]) mj <- mi Oi <- as.numeric(mass[, 2]) Dj <- as.numeric(mass[, 3])  res <- run_law_model(   law = \"GravExp\", mass_origin = mi, mass_destination = mj,   distance = distance, opportunity = NULL, param = 0.01,   model = \"DCM\", nb_trips = NULL, out_trips = Oi, in_trips = Dj,   average = FALSE, nbrep = 3, maxiter = 50, mindiff = 0.01,   write_proba = FALSE,   check_names = FALSE )  print(res) #>        Argument   Value #> 1           Law GravExp #> 2         Model     DCM #> 3 #Replications       3 #> 4   #Parameters       1 #> 5     Parameter    0.01"},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate mobility flows based on different trip distribution models — run_model","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"function estimates mobility flows using different distribution models. described (Lenormand et al. 2016) , propose two-step approach generate mobility flows separating trip distribution law, gravity intervening opportunities, modeling approach used generate flows law. function uses second step generate mobility flow based matrix probabilities using different models.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"","code":"run_model(   proba,   model = \"UM\",   nb_trips = 1000,   out_trips = NULL,   in_trips = out_trips,   average = FALSE,   nbrep = 3,   maxiter = 50,   mindiff = 0.01,   check_names = FALSE )"},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"proba squared matrix probability. sum matrix element must equal 1. normalized automatically case. model character indicating model use. nb_trips numeric value indicating total number trips. Must integer average = FALSE (see Details). out_trips numeric vector representing number outgoing trips per location. Must vector integers average = FALSE (see Details). in_trips numeric vector representing number incoming trips per location. Must vector integers average = FALSE (see Details). average boolean indicating average mobility flow matrix generated instead nbrep matrices based random draws (see Details). nbrep integer indicating number replications associated model run. Note nbrep = 1 average = TRUE (see Details). maxiter integer indicating maximal number iterations adjusting Doubly Constrained Model (see Details). mindiff numeric strictly positive value indicating stopping criterion adjusting Doubly Constrained Model (see Details). check_names boolean indicating ID location used vector names, matrix rownames colnames checked (see Note).","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"object class TDLM. list matrices containing nbrep simulated matrices.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"propose four constrained models generate flow matrix probabilities. models respect different level constraints. constraints can preserve total number trips (argument nb_trips) number -going trips \\(O_{}\\) (argument out_trips) /number -coming \\(D_{j}\\) (argument in_trips) according model. sum -going trips \\(\\sum_{} O_{}\\) equal sum -coming trips \\(\\sum_{j} D_{j}\\). Unconstrained model (model = \"UM\"). nb_trips preserved (arguments out_trips in_trips used). Production constrained model (model = \"PCM\"). out_trips preserved (arguments nb_trips in_trips used). Attraction constrained model (model = \"ACM\"). in_trips preserved (arguments nb_trips out_trips used). Doubly constrained model (model = \"DCM\"). out_trips in_trips preserved (arguments nb_tripswill used). doubly constrained model based Iterative Proportional Fitting process (Deming Stephan 1940) . arguments maxiter (50 default) mindiff (0.01 default) can used tune model. mindiff minimal tolerated relative error simulated observed marginals. maxiter ensures algorithm stops even converged toward mindiff wanted value. default, average = FALSE, nbrep matrices generated proba multinomial random draws take different forms according model used. case, models deal positive integers inputs outputs. Nevertheless, also possible generate average matrix based multinomial distribution (based infinite number drawings. case, models' inputs can either positive integer real numbers output (nbrep = 1 case) matrix positive real numbers.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"inputs based number locations sorted order. recommended use location ID vector names, matrix rownames matrix colnames set check_names = TRUE verify everything order running function (check_names = FALSE default). Note function check_format_names() can used control validity inputs running main package's functions.","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"Lenormand M, Bassolas , Ramasco JJ (2016). “Systematic comparison trip distribution laws models.” Journal Transport Geography, 51, 158-169. Deming , Stephan FF (1940). “Least Squares Adjustment Sample Frequency Table Expected Marginal Totals Known.” Annals Mathematical Statistics, 11, 427-444.","code":""},{"path":[]},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"Maxime Lenormand (maxime.lenormand@inrae.fr)","code":""},{"path":"https://epivec.github.io/TDLM/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate mobility flows based on different trip distribution models — run_model","text":"","code":"data(mass) data(od)  proba <- od / sum(od)  Oi <- as.numeric(mass[, 2]) Dj <- as.numeric(mass[, 3])  res <- run_model(   proba = proba,   model = \"DCM\", nb_trips = NULL, out_trips = Oi, in_trips = Dj,   average = FALSE, nbrep = 3, maxiter = 50, mindiff = 0.01,   check_names = FALSE )  # print(res)"}]
