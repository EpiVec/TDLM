% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gof.R
\name{gof}
\alias{gof}
\title{Compute goodness-of-fit measures between observed and simulated OD matrices}
\usage{
gof(
  sim,
  obs,
  measures = "all",
  distance,
  use_proba = FALSE,
  check_names = FALSE
)
}
\arguments{
\item{sim}{an object of class \code{TDLM} (output from \code{\link[=run_law_model]{run_law_model()}},
\code{\link[=run_law]{run_law()}} or \code{\link[=run_model]{run_model()}}).
A matrix or a list of matrix can also be used (see Note).}

\item{obs}{a squared matrix representing the observed mobility flows.}

\item{measures}{a vector of string(s) indicating which goodness-of-fit
measure(s) to chose (see Details). If \code{"all"} is specified, then all measures
will be calculated.}

\item{distance}{a squared matrix representing the distance between locations.
Only necessary for the distance-based measures.}

\item{use_proba}{a boolean indicating if the proba matrix should be used
instead of the simulated OD matrix to compute the measure(s). Only valid for
the output from \code{\link[=run_law_model]{run_law_model()}} with argument \code{write_proba = TRUE} (see
Note).}

\item{check_names}{a boolean indicating if the ID location are used as matrix
rownames and colnames and if they should be checked (see Note).}
}
\value{
A data.frame providing one or several goodness-of-fit measure(s) between
simulated OD(s) and an observed OD.
}
\description{
This function returns a data.frame where each row provides one or
several goodness-of-fit measures between a simulated and an observed
Origin-Destination matrix.
}
\details{
\loadmathjax
With \mjeqn{n}{n} the number of locations, \mjeqn{T_{ij}}{T_{ij}} the observed
flow between location \mjeqn{i}{i} and location \mjeqn{j}{j}
(argument \code{obs}), \mjeqn{\tilde{T}_{ij}}{\tilde{T}_{ij}} a simulated flow
between location \mjeqn{i}{i} and location \mjeqn{j}{j} (a matrix from
argument \code{sim}), \mjeqn{N=\sum_{i,j=1}^n T_{ij}}{N=\sum_{i,j=1}^n T_{ij}} the
total number of observed flows and
\mjeqn{\tilde{N}=\sum_{i,j=1}^n \tilde{T}_{ij}}{\tilde{T}=\sum_{i,j=1}^n \tilde{T}_{ij}}.

As described in \insertCite{Lenormand2016}{TDLM},

\mjeqn{\displaystyle CPC(T,\tilde{T}) = \frac{2\sum_{i,j=1}^n min(T_{ij},\tilde{T}_{ij})}{N + \tilde{N}}}{\displaystyle CPC(T,\tilde{T}) = \frac{2\sum_{i,j=1}^n min(T_{ij},\tilde{T}_{ij})}{N + \tilde{N}}}

\mjeqn{\displaystyle CPC(T,\tilde{T}) = \frac{2\sum_{i,j=1}^n min(T_{ij},\tilde{T}_{ij})}{N + \tilde{N}}}{\displaystyle CPC(T,\tilde{T}) = \frac{2\sum_{i,j=1}^n min(T_{ij},\tilde{T}_{ij})}{N + \tilde{N}}}
}
\note{
By default, if \code{sim} is an output of \code{\link[=run_law_model]{run_law_model()}}
the measure(s) are computed only for the simulated OD matrices and
not the proba matrix (included in the output when
\code{write_proba = TRUE}). The argument \code{use_proba} can be used to compute the
measure(s) based on the proba matrix instead of the simulated
OD matrix. In this case the argument \code{obs} should also be a proba matrix.

All the inputs should be based on the same number of
locations sorted in the same order. It is recommended to use the location ID
as matrix rownames and matrix colnames and to set
\code{check_names = TRUE} to verify that everything is in order before running
this function (\code{check_names = FALSE} by default). Note that the function
\code{\link[=check_format_names]{check_format_names()}} can be used to control the validity of all the inputs
before running the main package's functions.
}
\examples{
data(mass)
data(distance)
ind <- sample(dim(distance)[1], 100)

}
\references{
\insertRef{Lenormand2016}{TDLM}
}
\seealso{
\code{\link[=run_law_model]{run_law_model()}}
}
\author{
Maxime Lenormand (\email{maxime.lenormand@inrae.fr})
}
