% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_law_model.R
\name{run_law_model}
\alias{run_law_model}
\title{Estimate mobility flows based of different trip distribution laws and models}
\usage{
run_law_model(
  law = "NGravExp",
  mass_origin,
  mass_destination = mass_origin,
  distance,
  opportunity,
  param,
  model = "DCM",
  nb_trips,
  out_trips,
  in_trips,
  nbrep = 3,
  write_proba = FALSE,
  check_names = FALSE
)
}
\arguments{
\item{law}{a character indicating which law to use.}

\item{mass_origin}{a numeric vector representing the mass at origin (i.e.
demand).}

\item{mass_destination}{a numeric vector representing the mass at destination
(i.e. attractiveness).}

\item{distance}{a squared matrix representing the distance between locations
(see Details).}

\item{opportunity}{a squared matrix representing the number of opportunities
between locations (see Details).}

\item{param}{a positive real used to adjust the importance of the
distance or opportunity associated with the chosen law. Not necessary for the
original radiation law or the uniform law (see Details).}

\item{model}{a character indicating which model to use.}

\item{nb_trips}{an integers indicating the total number of trips.}

\item{out_trips}{a vector of integers representing the number of outgoing
trips per location.}

\item{in_trips}{a vector of integers representing the number of incoming
trips per location.}

\item{nbrep}{an integer indicating the number of replications
associated to the model run.}

\item{write_proba}{a boolean indicating if the estimation of the
probability to move from one location to another obtained with law
should be returned along with the flows estimations.}

\item{check_names}{a boolean indicating if the ID location are used as vector
names, matrix rownames and colnames and if they should be checked
(see Note).}
}
\value{
A \code{list} of \code{matrix} containing the \code{nbrep} simulated matrices end the matrix
of probability (called \code{proba}) if \code{write_proba = TRUE}.
}
\description{
This function estimates mobility flows using different distribution laws and
models. As described in \insertCite{Lenormand2016}{TDLM}, the function
uses a two-step approach to generate mobility flows by separating the trip
distribution law, gravity or intervening opportunities, from the modeling
approach used to generate the flows from this law.
}
\details{
\loadmathjax

First, we compute the matrix \code{proba} estimating the probability
\mjeqn{p_{ij}}{p_{ij}} to observe a trip from location \mjeqn{i}{i} to another
location \mjeqn{j}{j}. This probability is based on the demand
\mjeqn{m_{i}}{m_{i}} (argument \code{mass_origin}) and the attractiveness
\mjeqn{m_{j}}{m_{j}} (argument \code{mass_destination}). Note that the population
is typically used as a surrogate for both quantities (this is why
\code{mass_destination = mass_origin} by default). It also depends on the
distance \mjeqn{d_{ij}}{d_{ij}} between locations (argument \code{distance}) OR the
number of opportunities \mjeqn{s_{ij}}{s_{ij}} between locations
(argument \code{opportunity}) depending on the chosen law. Both the effect of the
distance and the number of opportunities can be adjusted with a parameter
(argument \code{param}) except for the original radiation law or the uniform law.

In this package we consider eight probabilistic laws described in details in
\insertCite{Lenormand2016}{TDLM}.
\enumerate{
\item Gravity law with an exponential distance decay function
(\code{law = "GravExp"}). The arguments \code{mass_origin}, \code{mass_destination}
(optional), \code{distance} and \code{param} will be used.
\item Normalized gravity law with an exponential distance decay function
(\code{law = "NGravExp"}). The arguments \code{mass_origin}, \code{mass_destination}
(optional), \code{distance} and \code{param} will be used.
\item Gravity law with a power distance decay function
(\code{law = "GravPow"}). The arguments \code{mass_origin}, \code{mass_destination}
(optional), \code{distance} and \code{param} will be used.
\item Normalized gravity law with a power distance decay function
(\code{law = "NGravPow"}). The arguments \code{mass_origin}, \code{mass_destination}
(optional), \code{distance} and \code{param} will be used.
\item Schneider's intervening opportunities law (\code{law = "Schneider"}). The
arguments \code{mass_origin}, \code{mass_destination} (optional), \code{opportunity} and
\code{param} will be used.
\item Radiation law (\code{law = "Rad"}). The arguments \code{mass_origin},
\code{mass_destination} (optional) and \code{opportunity} will be used.
\item Extended radiation law (\code{law = "ExtRad"}). The arguments \code{mass_origin},
\code{mass_destination} (optional), \code{opportunity} and \code{param} will be used.
\item Uniform law (\code{law = "Unif"}). The argument \code{mass_origin} will be used to
extract the number of locations.
}

Second, we propose four constrained models to generate the flow from these
distribution of probability. These models respect different level of
constraints. These constraints can preserve the total number of trips
(argument \code{nb_trips}) OR the number of out-going trips
\mjeqn{O_{i}}{O_{i}} (argument \code{out_trips}) AND/OR the number of in-coming
\mjeqn{D_{j}}{D_{j}} (argument \code{in_trips}) according to the model. The sum of
out-going trips \mjeqn{\sum_{i} O_{i}}{\sum_{i} O_{i}} should be equal to the
sum of in-coming trips \mjeqn{\sum_{j} D_{j}}{\sum_{j} D_{j}}.
\enumerate{
\item Unconstrained model (\code{model = "UM"}). Only \code{nb_trips} will be preserved
(arguments \code{out_trips} and \code{in_trips} will not be used).
\item Production constrained model (\code{model = "PCM"}). Only \code{out_trips} will be
preserved (arguments \code{nb_trips} and \code{in_trips} will not be used).
\item Attraction constrained model (\code{model = "ACM"}). Only \code{in_trips} will be
preserved (arguments \code{nb_trips} and \code{out_trips} will not be used).
\item Doubly constrained model (\code{model = "DCM"}). Both \code{out_trips} and
\code{in_trips} will be preserved (arguments \code{nb_trips}will not be used).
}
}
\note{
All the table inputs should be based on the same number of
locations sorted in the same order. It is recommended to use the location ID
as vector names, matrix rownames and matrix colnames and to set
\code{check_names = TRUE} to verify that everything is in order before running this
function (\code{check_names = FALSE} by default). Note that the function
\code{\link[=check_format_names]{check_format_names()}} can be used to control the validity of all the inputs
before running the main package's functions.
}
\examples{
data(mass)
data(distance)
ind <- sample(dim(distance)[1], 100)

}
\references{
\insertRef{Lenormand2016}{TDLM}
}
\seealso{
\code{\link[=check_format_names]{check_format_names()}} \code{\link[=extract_opportunities]{extract_opportunities()}}
}
\author{
Maxime Lenormand (\email{maxime.lenormand@inrae.fr})
}
